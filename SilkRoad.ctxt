#BlueJ class context
comment0.target=SilkRoad
comment0.text=\r\n\ Clase\ SilkRoad\:\ representa\ el\ tablero\ principal\ del\ juego.\r\n\r\n\ El\ tablero\ est\u00E1\ compuesto\ por\ un\ conjunto\ de\ celdas\ dispuestas\ en\ forma\ de\ espiral.\r\n\ Cada\ celda\ puede\ contener\ un\ robot\ y/o\ una\ tienda.\r\n\r\n\ Esta\ clase\ se\ encarga\ de\:\r\n\ -\ Crear\ y\ almacenar\ las\ celdas\ en\ espiral.\r\n\ -\ Administrar\ robots\ (colocar,\ mover,\ devolver\ a\ su\ posici\u00F3n\ inicial).\r\n\ -\ Administrar\ tiendas\ (colocar,\ eliminar).\r\n\ -\ Controlar\ la\ visualizaci\u00F3n\ de\ las\ celdas\ y\ sus\ elementos.\r\n
comment1.params=length
comment1.target=SilkRoad(int)
comment1.text=\r\n\ crea\ el\ tablero\r\n\ @param\ length\ es\ la\ longitud\ del\ tablero\r\n
comment10.params=
comment10.target=void\ moveRobots()
comment10.text=\r\n\ determina\ el\ mejor\ movimiento\ para\ el\ robot\ iterando\ a\ traves\ de\ las\ tiendas\r\n\ y\ asignando\ bestValue\r\n
comment11.params=initialCell\ distance
comment11.target=void\ moveRobot(int,\ int)
comment11.text=\r\n\ Mueve\ un\ robot\ de\ acuerdo\ a\ la\ distancia\ indicada.\r\n\ @param\ initialCell\ celda\ de\ origen\r\n\ @param\ distance\ n\u00FAmero\ de\ celdas\ a\ moverse\ (puede\ ser\ negativo)\r\n
comment12.params=
comment12.target=void\ resupplyStores()
comment12.text=\r\n\ este\ metodo\ suple\ con\ los\ tenges\ iniciales\ a\ todas\ las\r\n\ tiendas\ del\ tablero\r\n
comment13.params=
comment13.target=void\ returnRobots()
comment13.text=\r\n\ hace\ que\ los\ robots\ retornen\ al\ origen\r\n
comment14.params=
comment14.target=void\ reboot()
comment14.text=\r\n\ lo\ que\ tiene\ que\ hacer\ esto\ es\ return\ robots\ y\ resuply\ stores\ basicamente;\r\n\ mirar\ el\ efecto\ de\ los\ dias\r\n
comment15.params=
comment15.target=int\ profit()
comment15.text=\r\n\ este\ metodo\ recorre\ todas\ las\ celdas\ y\ extrae\ los\ tenges\ de\ cada\ robot\ para\ saber\ la\ ganancia\ acumulada\r\n
comment16.params=
comment16.target=int[][]\ stores()
comment16.text=\r\n\ Muestra\ y\ retorna\ todas\ las\ tiendas\ ordenadas\ por\ id\ de\ celda.\r\n\ Cada\ fila\ tiene\ el\ formato\ [cellId,\ tenges].\r\n
comment17.params=
comment17.target=int[][]\ emptiedStores()
comment17.text=\r\n\ devuelve\ cuantas\ veces\ han\ sido\ vaciadas\ las\ tiendas,\ ordenadas\r\n\ en\ una\ lista\ de\ menor\ a\ mayor\ localizacion\ [location,times]\r\n
comment18.params=
comment18.target=int[][]\ robots()
comment18.text=\r\n\ Muestra\ y\ retorna\ todos\ los\ robots\ ordenados\ por\ id\ de\ celda.\r\n\ Cada\ fila\ tiene\ el\ formato\ [cellId,\ tenges].\r\n
comment19.params=
comment19.target=void\ PrintprofitPerMove()
comment19.text=\r\n\ retorna\ los\ profits\ de\ cada\ robot\ segun\ sus\ moviemientos\r\n
comment2.params=days
comment2.target=SilkRoad(int[][])
comment2.text=\r\n\ crea\ el\ tablero\ de\ acuerdo\ a\ entrada\ del\ maraton\r\n\ @param\ days\ es\ la\ lista\ de\ acciones\ por\ dia\r\n
comment20.params=
comment20.target=int[][]\ profitPerMove()
comment21.params=
comment21.target=void\ makeInvisible()
comment21.text=\r\n\ Hace\ invisibles\ todas\ las\ celdas\ y\ sus\ elementos.\r\n
comment22.params=
comment22.target=void\ makeVisible()
comment22.text=\r\n\ Hace\ visibles\ todas\ las\ celdas\ y\ sus\ elementos.\r\n
comment23.params=
comment23.target=boolean\ ok()
comment23.text=\r\n\ verifica\ que\ la\ ultima\ operacion\ haya\ sido\ exitosa\r\n
comment24.params=
comment24.target=java.lang.String\ getLastError()
comment24.text=\r\n\ apoyo\ de\ ok\r\n
comment25.params=
comment25.target=void\ finish()
comment25.text=\r\n\ termina\ la\ simulacion\r\n
comment26.params=
comment26.target=java.util.ArrayList\ getCells()
comment26.text=\r\n\ Devuelve\ todas\ las\ celdas\ del\ tablero.\r\n\r\n\ @return\ lista\ de\ celdas\r\n
comment27.params=days
comment27.target=void\ placeEntities(int[][])
comment27.text=Coloca\ robots\ y\ tiendas\ seg\u00FAn\ la\ entrada\ del\ constructor
comment28.params=days
comment28.target=int\ getMaxPosition(int[][])
comment28.text=Determina\ la\ posici\u00F3n\ m\u00E1s\ lejana\ del\ arreglo\ de\ d\u00EDas\ (solo\ por\ posici\u00F3n,\ no\ por\ tenges)
comment29.params=n
comment29.target=generateSpiral(int)
comment29.text=\r\n\ Genera\ coordenadas\ en\ espiral\ para\ la\ creaci\u00F3n\ de\ celdas.\r\n\r\n\ @param\ n\ cantidad\ de\ posiciones\ a\ generar\r\n\ @return\ lista\ de\ coordenadas\ en\ espiral\r\n
comment3.params=length\ days
comment3.target=void\ initBoard(int,\ int[][])
comment3.text=\ \r\n\ \r\n\ Inicializa\ el\ tablero\ (para\ ambos\ constructores\r\n
comment30.params=
comment30.target=java.util.List\ getAllRobots()
comment31.params=
comment31.target=void\ highlightTopRobot()
comment4.params=cellId\ tenges
comment4.target=void\ placeStore(int,\ int)
comment4.text=\r\n\ coloca\ la\ tienda\ en\ una\ posicion\ con\ cierta\ cantidad\ de\ tenges\r\n\ \ @param\ cellId\ identificador\ de\ la\ celda\r\n\ \ \ @tenges\ cantidad\ de\ tenges\ a\ asignar\r\n
comment5.params=cellId\ tenges\ type
comment5.target=void\ placeStore(int,\ int,\ java.lang.String)
comment5.text=\r\n\ coloca\ la\ tienda\ en\ una\ posicion\ con\ cierta\ cantidad\ de\ tenges\r\n\ \ @param\ cellId\ identificador\ de\ la\ celda\r\n\ \ @param\ tenges\ cantidad\ de\ tenges\ a\ asignar\r\n\ \ @param\ type\ determina\ el\ tipo\ de\ tienda\r\n
comment6.params=cellId
comment6.target=void\ removeStore(int)
comment6.text=\r\n\ Elimina\ la\ tienda\ de\ la\ celda\ indicada.\r\n\r\n\ @param\ cellId\ identificador\ de\ la\ celda\r\n
comment7.params=cellId\ type
comment7.target=void\ placeRobot(int,\ java.lang.String)
comment7.text=\r\n\ Coloca\ un\ robot\ en\ la\ celda\ indicada.\r\n\r\n\ @param\ cellId\ identificador\ de\ la\ celda\ destino\r\n
comment8.params=cellId
comment8.target=void\ placeRobot(int)
comment9.params=cellId
comment9.target=void\ removeRobot(int)
comment9.text=\r\n\ Elimina\ el\ robot\ de\ la\ celda\ indicada.\r\n\r\n\ @param\ cellId\ identificador\ de\ la\ celda\r\n
numComments=32
